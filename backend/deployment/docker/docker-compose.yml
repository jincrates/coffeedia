version: "3.8"
name: coffeedia-services
services:
  # 쓰기 전용 DB
  coffeedia-postgres-main:
    image: bitnami/postgresql:14
    container_name: coffeedia-postgres-main
    ports:
      - "5432:5432"
    volumes:
      - "./postgresql/volumes/main:/bitnami/postgresql"
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/db.sql
    environment:
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: ${POSTGRES_REPLICATION_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD}
      POSTGRESQL_USER: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_DATABASE: ${POSTGRES_DATABASE}
    networks:
      - coffeedia-network

  # 읽기 전용 DB
  coffeedia-postgres-replica:
    image: bitnami/postgresql:14
    container_name: coffeedia-postgres-replica
    depends_on:
      - coffeedia-postgres-main
    ports:
      - "5433:5432"
    volumes:
      - "./postgresql/volumes/replica:/bitnami/postgresql"
    environment:
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: ${POSTGRES_REPLICATION_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD}
      POSTGRESQL_MASTER_HOST: coffeedia-postgres-main
      POSTGRESQL_MASTER_PORT_NUMBER: 5432
      POSTGRESQL_USER: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - coffeedia-network

  # Zookeeper
  coffeedia-zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2.arm64
    container_name: coffeedia-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: ${ZOOKEEPER_SERVER_ID}
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
      ZOOKEEPER_INIT_LIMIT: ${ZOOKEEPER_INIT_LIMIT}
      ZOOKEEPER_SYNC_LIMIT: ${ZOOKEEPER_SYNC_LIMIT}
      ZOOKEEPER_SERVERS: coffeedia-zookeeper:2888:3888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
    volumes:
      - "./zookeeper/volumes/data:/var/lib/zookeeper/data"
      - "./zookeeper/volumes/transactions:/var/lib/zookeeper/log"
    networks:
      - coffeedia-network

  coffeedia-kafka-broker-1:
    image: confluentinc/cp-kafka:7.2.2.arm64
    container_name: coffeedia-kafka-broker-1
    ports:
      - "19092:19092"
    depends_on:
      - coffeedia-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: coffeedia-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://coffeedia-kafka-broker-1:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_COMPRESSION_TYPE: ${KAFKA_COMPRESSION_TYPE}
    volumes:
      - "./kafka/volumes/broker-1:/var/lib/kafka/data"
    networks:
      - coffeedia-network

  coffeedia-kafka-broker-2:
    image: confluentinc/cp-kafka:7.2.2.arm64
    container_name: coffeedia-kafka-broker-2
    ports:
      - "29092:29092"
    depends_on:
      - coffeedia-zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: coffeedia-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://coffeedia-kafka-broker-2:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_COMPRESSION_TYPE: ${KAFKA_COMPRESSION_TYPE}
    volumes:
      - "./kafka/volumes/broker-2:/var/lib/kafka/data"
    networks:
      - coffeedia-network

  coffeedia-kafka-broker-3:
    image: confluentinc/cp-kafka:7.2.2.arm64
    container_name: coffeedia-kafka-broker-3
    ports:
      - "39092:39092"
    depends_on:
      - coffeedia-zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: coffeedia-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://coffeedia-kafka-broker-3:9092,EXTERNAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_COMPRESSION_TYPE: ${KAFKA_COMPRESSION_TYPE}
    volumes:
      - "./kafka/volumes/broker-3:/var/lib/kafka/data"
    networks:
      - coffeedia-network

  coffeedia-kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: coffeedia-kafka-ui
    depends_on:
      - coffeedia-kafka-broker-1
      - coffeedia-kafka-broker-2
      - coffeedia-kafka-broker-3
    ports:
      - "9000:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_ZOOKEEPER: coffeedia-zookeeper:2181
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: coffeedia-kafka-broker-1:9092,coffeedia-kafka-broker-2:9092,coffeedia-kafka-broker-3:9092
    networks:
      - coffeedia-network

  coffeedia-redis:
    image: redis:7.0
    container_name: coffeedia-redis
    ports:
      - "6379:6379"
    networks:
      - coffeedia-network

  coffeedia-keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    container_name: coffeedia-keycloak
    ports:
      - "8080:8080"
    command: start-dev --import-realm
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    networks:
      - coffeedia-network

  # Observability
  coffeedia-grafana:
    image: grafana/grafana-oss:10.4.3
    container_name: coffeedia-grafana
    depends_on:
      - coffeedia-loki
      - coffeedia-prometheus
      - coffeedia-tempo
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./observability/grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - coffeedia-network

  coffeedia-loki:
    image: grafana/loki:2.9.8
    container_name: coffeedia-loki
    depends_on:
      - coffeedia-fluent-bit
    ports:
      - "3100:3100"

  coffeedia-fluent-bit:
    image: grafana/fluent-bit-plugin-loki:2.9.8
    container_name: coffeedia-fluent-bit
    ports:
      - "24224:24224"
    environment:
      - LOKI_URL=http://coffeedia-loki:3100/loki/api/v1/push
    volumes:
      - ./observability/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf

  coffeedia-prometheus:
    image: quay.io/prometheus/prometheus:v2.52.0
    container_name: coffeedia-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  coffeedia-tempo:
    image: grafana/tempo:2.5.0
    container_name: coffeedia-tempo
    command: -config.file=/etc/tempo-config.yml
    ports:
      - "3110:3100"     # Tempo
      - "4317:4317"     # OTel
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo-config.yml

networks:
  coffeedia-network:
    driver: bridge
