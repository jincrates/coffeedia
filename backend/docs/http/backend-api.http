### ==================================== 원두 관리 ====================================
### 원두 등록
< {%
  // 과거 1년 내의 랜덤한 날짜 생성
  const today = new Date();
  const oneYearAgo = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());
  const randomTime = oneYearAgo.getTime() + Math.random() * (today.getTime() - oneYearAgo.getTime());
  const randomDate = new Date(randomTime);
  const formattedDate = randomDate.toISOString().split('T')[0]; // YYYY-MM-DD 형식

  request.variables.set("randomRoastDate", formattedDate);
%}
POST {{backend-api}}/api/beans
Content-Type: application/json

{
  "name": "{{$random.commerce.productName}}",
  "origin": {
    "country": "{{$random.address.country}}",
    "region": "{{$random.address.cityName}}"
  },
  "roaster": "{{$random.ancient.god}}",
  "roastDate": "{{randomRoastDate}}",
  "grams": {{$random.integer(100, 500)}},
  "flavorIds": [
    {{$random.integer(1, 10)}},
    {{$random.integer(1, 10)}},
    {{$random.integer(1, 10)}}
  ]
}

> {%
  client.log('beanId', response.body.data.beanId);
  client.global.set("beanId", response.body.data.beanId);
%}

### 원두 목록 조회
GET {{backend-api}}/api/beans

### 원두 목록 조회(query)
GET {{backend-api}}/api/beans?page=0&size=10&sort=roastDate:desc

### 원두 조회
GET {{backend-api}}/api/beans/{{beanId}}

### 원두 수정
PUT {{backend-api}}/api/beans/{{beanId}}
Content-Type: application/json

{
 "name": "{{$random.commerce.productName}}"
}


### ==================================== 장비 관리 ====================================
### 장비 등록
< {%
  // 과거 2년 내의 랜덤한 날짜 생성
  const today = new Date();
  const twoYearsAgo = new Date(today.getFullYear() - 2, today.getMonth(), today.getDate());
  const randomTime = twoYearsAgo.getTime() + Math.random() * (today.getTime() - twoYearsAgo.getTime());
  const randomDate = new Date(randomTime);
  const formattedBuyDate = randomDate.toISOString().split('T')[0]; // YYYY-MM-DD 형식

  // 장비 타입 랜덤 선택
  const equipmentTypes = ["MACHINE", "GRINDER"];
  const randomType = equipmentTypes[Math.floor(Math.random() * equipmentTypes.length)];

  // 장비 브랜드 랜덤 선택
  const equipmentBrands = ["브레빌", "드롱기", "라마르조코", "누오바시모넬리", "로켓", "커맨단테", "바라타", "니체", "훌리오"];
  const randomBrand = equipmentBrands[Math.floor(Math.random() * equipmentBrands.length)];

  request.variables.set("randomBuyDate", formattedBuyDate);
  request.variables.set("randomEquipmentType", randomType);
  request.variables.set("randomBrand", randomBrand);
%}
POST {{backend-api}}/api/equipments
Content-Type: application/json

{
  "type": "{{randomEquipmentType}}",
  "name": "{{$random.commerce.productName}}",
  "brand": "{{randomBrand}}",
  "status": "ACTIVE",
  "description": "{{$random.lorem.sentence}}",
  "buyDate": "{{randomBuyDate}}",
  "buyUrl": "https://{{$random.internet.domainName}}/products/{{$random.integer(1000, 9999)}}"
}

> {%
  client.log('equipmentId', response.body.data.id);
  client.global.set("equipmentId", response.body.data.id);
%}

### 장비 목록 조회
GET {{backend-api}}/api/equipments
